{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/context/MessengerContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessengerContext = /*#__PURE__*/createContext(undefined);\nexport const MessengerProvider = ({\n  children\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [showSidebar, setShowSidebar] = useState(null);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1024);\n  const [screenSize, setScreenSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [chatWidth, setChatWidth] = useState(isMobile ? window.innerWidth : window.innerWidth - 250);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 1024);\n      setScreenSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      setChatWidth(isMobile ? window.innerWidth : window.innerWidth - 250);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [showSidebar]);\n  return /*#__PURE__*/_jsxDEV(MessengerContext.Provider, {\n    value: {\n      messages,\n      setMessages,\n      chats,\n      setChats,\n      currentChat,\n      setCurrentChat,\n      showSidebar,\n      setShowSidebar,\n      isMobile,\n      setIsMobile,\n      screenSize,\n      chatWidth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MessengerProvider, \"jgDc0SwjEaPpD32WtDPkSOnoRps=\");\n_c = MessengerProvider;\nexport const useMessenger = () => {\n  _s2();\n  const context = useContext(MessengerContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useMessenger, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"MessengerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","MessengerContext","undefined","MessengerProvider","children","_s","messages","setMessages","chats","setChats","currentChat","setCurrentChat","showSidebar","setShowSidebar","isMobile","setIsMobile","window","innerWidth","screenSize","setScreenSize","width","height","innerHeight","chatWidth","setChatWidth","handleResize","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useMessenger","_s2","context","Error","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/context/MessengerContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { ChatInterface, MessageInterface } from '../types';\n\n\ninterface MessengerContextType {\n  messages: MessageInterface[];\n  setMessages: React.Dispatch<React.SetStateAction<MessageInterface[]>>;\n  chats: ChatInterface[];\n  setChats: React.Dispatch<React.SetStateAction<ChatInterface[]>>;\n  currentChat: ChatInterface | null;\n  setCurrentChat: React.Dispatch<React.SetStateAction<ChatInterface | null>>;\n  showSidebar: boolean;\n  setShowSidebar: React.Dispatch<React.SetStateAction<boolean>>;\n  isMobile: boolean;\n  setIsMobile: React.Dispatch<React.SetStateAction<boolean>>;\n  screenSize: {width: number, height: number};\n  chatWidth: number;\n}\n\n\nconst MessengerContext = createContext<MessengerContextType | undefined>(undefined);\n\ninterface MessengerProviderProps {\n  children: ReactNode;\n}\n\nexport const MessengerProvider: React.FC<MessengerProviderProps> = ({ children }) => {\n  const [messages, setMessages] = useState<MessageInterface[]>([])\n  const [chats, setChats] = useState<ChatInterface[]>([])\n  const [currentChat, setCurrentChat] = useState<ChatInterface | null>(null);\n  const [showSidebar, setShowSidebar] = useState<any>(null)\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1024);\n  const [screenSize, setScreenSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [chatWidth, setChatWidth] = useState<number>(isMobile ? window.innerWidth : window.innerWidth - 250)\n\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 1024);\n      setScreenSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      setChatWidth(isMobile ? window.innerWidth : window.innerWidth - 250); \n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [showSidebar]);\n\n  return (\n    <MessengerContext.Provider value={{ messages, setMessages, chats, setChats, currentChat, setCurrentChat, showSidebar, setShowSidebar, isMobile, setIsMobile, screenSize, chatWidth }}>\n      {children}\n    </MessengerContext.Provider >\n  );\n};\n\nexport const useMessenger = (): MessengerContextType => {\n  const context = useContext(MessengerContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAaC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoBzF,MAAMC,gBAAgB,gBAAGN,aAAa,CAAmCO,SAAS,CAAC;AAMnF,OAAO,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAqB,EAAE,CAAC;EAChE,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAkB,EAAE,CAAC;EACvD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAuB,IAAI,CAAC;EAC1E,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAACmB,MAAM,CAACC,UAAU,GAAG,IAAI,CAAC;EAClE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC;IAC3CuB,KAAK,EAAEJ,MAAM,CAACC,UAAU;IACxBI,MAAM,EAAEL,MAAM,CAACM;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAASiB,QAAQ,GAAGE,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC;EAG1GnB,SAAS,CAAC,MAAM;IACd,MAAM2B,YAAY,GAAGA,CAAA,KAAM;MACzBV,WAAW,CAACC,MAAM,CAACC,UAAU,GAAG,IAAI,CAAC;MACrCE,aAAa,CAAC;QACZC,KAAK,EAAEJ,MAAM,CAACC,UAAU;QACxBI,MAAM,EAAEL,MAAM,CAACM;MACjB,CAAC,CAAC;MACFE,YAAY,CAACV,QAAQ,GAAGE,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC;IACtE,CAAC;IAEDD,MAAM,CAACU,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXT,MAAM,CAACW,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;EAEjB,oBACEZ,OAAA,CAACC,gBAAgB,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,QAAQ;MAAEC,WAAW;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,WAAW;MAAEC,cAAc;MAAEC,WAAW;MAAEC,cAAc;MAAEC,QAAQ;MAAEC,WAAW;MAAEG,UAAU;MAAEK;IAAU,CAAE;IAAAnB,QAAA,EAClLA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAAC5B,EAAA,CAnCWF,iBAAmD;AAAA+B,EAAA,GAAnD/B,iBAAmD;AAqChE,OAAO,MAAMgC,YAAY,GAAGA,CAAA,KAA4B;EAAAC,GAAA;EACtD,MAAMC,OAAO,GAAGzC,UAAU,CAACK,gBAAgB,CAAC;EAC5C,IAAI,CAACoC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,YAAY;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}