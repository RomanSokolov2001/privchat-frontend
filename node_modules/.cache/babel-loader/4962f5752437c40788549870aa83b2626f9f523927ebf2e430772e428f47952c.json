{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/Chat.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useUser } from '../context/UserContext';\nimport { MessengerService } from '../api/MessengerService';\nimport { useMessenger } from '../context/MessengerContext';\nimport { getOpponentNickname } from '../utils/functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const {\n    messages,\n    setMessages,\n    currentChat\n  } = useMessenger();\n  const [chatMessages, setChatMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [opponentNickname, setOpponentNickname] = useState('');\n  useEffect(() => {\n    if (!currentChat) return;\n    function loadMessages() {\n      if (!currentChat) return;\n      const filteredMessages = messages.filter(msg => msg.sender == getOpponentNickname(user, currentChat) || msg.receiver == getOpponentNickname(user, currentChat));\n      setChatMessages(filteredMessages);\n    }\n    loadMessages();\n  }, [currentChat, messages]);\n  const sendMessage = async () => {\n    if (!user || !currentChat) return;\n    if (message.trim()) {\n      setMessage('');\n      await MessengerService.sendMessage(getOpponentNickname(user, currentChat), message, String(currentChat.sharedSecretKey), user.jwt);\n    }\n    const messageToSave = {\n      sender: user.nickname,\n      receiver: getOpponentNickname(user, currentChat),\n      createdAt: new Date(),\n      content: message\n    };\n    setMessages(prev => [...prev, messageToSave]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      flex: 1,\n      padding: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Chatting with \", opponentNickname, \" Secret: \", currentChat && currentChat.sharedSecretKey.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px',\n        overflowY: 'scroll',\n        border: '1px solid #ccc',\n        marginBottom: '10px',\n        padding: '10px'\n      },\n      children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [msg.sender, \": \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message...\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && sendMessage(),\n      style: {\n        width: '80%',\n        padding: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        marginLeft: '5px'\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"3ri6O/dYWdqqjWV5ntfHquLK2hY=\", false, function () {\n  return [useUser, useMessenger];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useUser","MessengerService","useMessenger","getOpponentNickname","jsxDEV","_jsxDEV","Chat","_s","user","messages","setMessages","currentChat","chatMessages","setChatMessages","message","setMessage","opponentNickname","setOpponentNickname","loadMessages","filteredMessages","filter","msg","sender","receiver","sendMessage","trim","String","sharedSecretKey","jwt","messageToSave","nickname","createdAt","Date","content","prev","style","flex","padding","children","toString","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","border","marginBottom","map","index","type","placeholder","value","onChange","e","target","onKeyDown","key","width","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/Chat.tsx"],"sourcesContent":["import { JSXElementConstructor, Key, ReactElement, ReactNode, ReactPortal, useEffect, useState } from 'react';\nimport { useUser } from '../context/UserContext';\nimport { MessengerService } from '../api/MessengerService';\nimport { useMessenger } from '../context/MessengerContext';\nimport { Message } from '../types';\nimport { getOpponentNickname } from '../utils/functions';\n\n\nconst Chat = () => {\n  const { user } = useUser()\n  const {messages, setMessages, currentChat} = useMessenger()\n  const [chatMessages, setChatMessages] = useState<any>([])\n  const [message, setMessage] = useState('');\n  const [opponentNickname, setOpponentNickname] = useState<string>('')\n\n\n\n  useEffect(() => {\n    if (!currentChat) return\n    function loadMessages() {\n      if (!currentChat) return\n      const filteredMessages = messages.filter(msg => \n        msg.sender == getOpponentNickname(user, currentChat) || \n        msg.receiver == getOpponentNickname(user, currentChat)\n      );\n\n      setChatMessages(filteredMessages);\n    }\n\n    loadMessages()\n  }, [currentChat, messages])\n\n  const sendMessage = async () => {\n    if (!user || !currentChat) return\n    if (message.trim()) {\n      setMessage('');\n      await MessengerService.sendMessage(getOpponentNickname(user, currentChat), message, String(currentChat.sharedSecretKey), user.jwt)\n    }\n    const messageToSave: Message = \n    {\n      sender: user.nickname,\n      receiver: getOpponentNickname(user, currentChat),\n      createdAt: new Date(),\n      content: message\n    }\n    setMessages((prev)=> [...prev, messageToSave])\n\n  };\n\n  return (\n    <section style={{ flex: 1, padding: '10px' }}>\n      <h3>Chatting with {opponentNickname} Secret: {currentChat&& currentChat.sharedSecretKey.toString()}</h3>\n      <div style={{ height: '300px', overflowY: 'scroll', border: '1px solid #ccc', marginBottom: '10px', padding: '10px' }}>\n        {chatMessages.map((msg: { sender: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | null | undefined; content: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | null | undefined; }, index: Key | null | undefined) => (\n          <p key={index}>{msg.sender}: {msg.content}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Type a message...\"\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n        onKeyDown={e => e.key === 'Enter' && sendMessage()}\n        style={{ width: '80%', padding: '5px' }}\n      />\n      <button onClick={sendMessage} style={{ marginLeft: '5px' }}>Send</button>\n    </section>\n  );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}