{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/pages/Messenger.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { MessengerService } from '../api/MessengerService';\nimport DiffieHellmanService from '../api/DiffieHellmanService';\nimport { initializeWebSocket, disconnectWebSocket } from '../services/WebSocketService';\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport { BACKEND_API } from '../config';\nimport Header from '../components/Header';\nimport { getOpponentNickname, getOpponentPublicKey } from '../utils/functions';\nimport Body from '../components/Body';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messenger = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const {\n    chats,\n    setChats,\n    messages,\n    setMessages,\n    currentChat,\n    setCurrentChat,\n    isMobile,\n    showSidebar\n  } = useMessenger();\n  const chatsRef = useRef([]);\n  useEffect(() => {\n    chatsRef.current = chats;\n  }, [chats]);\n  useEffect(() => {\n    const client = initializeWebSocket(BACKEND_API, handleSocketUpdate, (user === null || user === void 0 ? void 0 : user.nickname) || '');\n    return () => disconnectWebSocket(client);\n  }, [user]);\n  const loadChats = async () => {\n    if (!user) return;\n    const fetchedChats = await MessengerService.getChats(user.publicKey, user.jwt);\n    if (!fetchedChats) return;\n    const updatedChats = fetchedChats.map(chat => {\n      const otherPartyKey = getOpponentPublicKey(user, chat);\n      const sharedKey = DiffieHellmanService.generateSharedSecret(otherPartyKey, user.secretKey);\n      return {\n        ...chat,\n        sharedSecretKey: sharedKey || ''\n      };\n    });\n    setChats(updatedChats);\n  };\n  const handleSocketUpdate = wsMessage => {\n    if (wsMessage.type == \"request\") {\n      loadChats();\n      return;\n    }\n    if (wsMessage.type == \"file\") {\n      const data = wsMessage.data;\n      setMessages(prev => [...prev, {\n        fileEntry: data,\n        sender: data.sender,\n        receiver: data.receiver,\n        time: String(new Date())\n      }]);\n    }\n    if (wsMessage.type == \"message\") {\n      const {\n        sender,\n        content: encryptedContent,\n        receiver\n      } = wsMessage.data || {};\n      if (!sender || !encryptedContent) return;\n      const chat = chatsRef.current.find(chat => chat.requesterNickname === sender || chat.requestedNickname === sender);\n      const sharedKey = chat === null || chat === void 0 ? void 0 : chat.sharedSecretKey;\n      if (!sharedKey || !user) return;\n      const decryptedContent = DiffieHellmanService.decrypt(encryptedContent, String(sharedKey));\n      if (!decryptedContent) return;\n      console.log('should be saved');\n      setMessages(prev => [...prev, {\n        content: decryptedContent,\n        sender,\n        receiver: user.nickname,\n        time: String(new Date())\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen w-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userNickname: user === null || user === void 0 ? void 0 : user.nickname,\n      chatNickname: currentChat ? getOpponentNickname(user, currentChat) : 'No chat selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Messenger, \"CDVVp8zs01AcSSKxY9WF4nHwuvY=\", false, function () {\n  return [useUser, useMessenger];\n});\n_c = Messenger;\nexport default Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["React","useEffect","useRef","MessengerService","DiffieHellmanService","initializeWebSocket","disconnectWebSocket","useUser","useMessenger","BACKEND_API","Header","getOpponentNickname","getOpponentPublicKey","Body","jsxDEV","_jsxDEV","Messenger","_s","user","chats","setChats","messages","setMessages","currentChat","setCurrentChat","isMobile","showSidebar","chatsRef","current","client","handleSocketUpdate","nickname","loadChats","fetchedChats","getChats","publicKey","jwt","updatedChats","map","chat","otherPartyKey","sharedKey","generateSharedSecret","secretKey","sharedSecretKey","wsMessage","type","data","prev","fileEntry","sender","receiver","time","String","Date","content","encryptedContent","find","requesterNickname","requestedNickname","decryptedContent","decrypt","console","log","className","children","userNickname","chatNickname","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/pages/Messenger.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { MessengerService } from '../api/MessengerService';\nimport DiffieHellmanService from '../api/DiffieHellmanService';\nimport { initializeWebSocket, disconnectWebSocket } from '../services/WebSocketService';\n\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport { ChatInterface, FileEntry } from '../types';\nimport { BACKEND_API } from '../config';\n\nimport Header from '../components/Header';\nimport { getOpponentNickname, getOpponentPublicKey } from '../utils/functions';\nimport Body from '../components/Body';\n\n\nconst Messenger: React.FC = () => {\n  const { user } = useUser();\n  const { chats, setChats, messages, setMessages, currentChat, setCurrentChat, isMobile, showSidebar } = useMessenger();\n  const chatsRef = useRef<ChatInterface[]>([]);\n\n\n  useEffect(() => {\n    chatsRef.current = chats;\n  }, [chats]);\n\n  useEffect(() => {\n    const client = initializeWebSocket(\n      BACKEND_API,\n      handleSocketUpdate,\n      user?.nickname || ''\n    );\n\n    return () => disconnectWebSocket(client);\n  }, [user]);\n\n  const loadChats = async () => {\n    if (!user) return;\n    const fetchedChats = await MessengerService.getChats(user.publicKey, user.jwt);\n    if (!fetchedChats) return\n    const updatedChats = fetchedChats.map((chat: ChatInterface) => {\n      const otherPartyKey = getOpponentPublicKey(user, chat);\n      const sharedKey = DiffieHellmanService.generateSharedSecret(otherPartyKey, user.secretKey);\n      return { ...chat, sharedSecretKey: sharedKey || '' };\n    });\n    setChats(updatedChats);\n  };\n\n  const handleSocketUpdate = (wsMessage: any) => {\n    if (wsMessage.type == \"request\") {\n      loadChats();\n      return\n    }\n    if (wsMessage.type == \"file\") {\n      const data: FileEntry = wsMessage.data\n      setMessages((prev) => [\n        ...prev,\n        {\n          fileEntry: data,\n          sender: data.sender,\n          receiver: data.receiver,\n          time: String(new Date()),\n        },\n      ]);\n    }\n    if (wsMessage.type == \"message\") {\n      const { sender, content: encryptedContent, receiver } = wsMessage.data || {};\n      if (!sender || !encryptedContent) return;\n\n      const chat = chatsRef.current.find(\n        (chat) => chat.requesterNickname === sender || chat.requestedNickname === sender\n      );\n\n      const sharedKey = chat?.sharedSecretKey;\n      if (!sharedKey || !user) return;\n\n      const decryptedContent = DiffieHellmanService.decrypt(encryptedContent, String(sharedKey));\n      if (!decryptedContent) return;\n      console.log('should be saved')\n      setMessages((prev) => [\n        ...prev,\n        {\n          content: decryptedContent,\n          sender,\n          receiver: user.nickname,\n          time: String(new Date()),\n        },\n      ]);\n    }\n\n  };\n\n  return (\n    <div className='flex flex-col h-screen w-screen'>\n      <Header\n        userNickname={user?.nickname}\n        chatNickname={currentChat ? getOpponentNickname(user, currentChat) : 'No chat selected'}\n      />\n      <Body />\n    </div>\n  );\n};\n\nexport default Messenger;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}