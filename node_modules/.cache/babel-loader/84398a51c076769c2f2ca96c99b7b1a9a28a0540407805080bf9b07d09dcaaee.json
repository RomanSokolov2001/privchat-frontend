{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nexport const initializeWebSocket = (url, onMessageReceived, nickname) => {\n  const socket = new SockJS(`http://${url}:8080/ws`);\n  const client = Stomp.over(socket);\n  client.connect({}, () => {\n    var url = client.ws._transport.url;\n    const sessionId = url.replace(\"ws://${}:8080/ws/\", \"\").replace(\"/websocket\", \"\").replace(/^[0-9]+\\//, \"\").replace(/^[0-9]+\\//, \"\");\n    client.subscribe(`/queue/specific-user-${sessionId}`, msg => {\n      onMessageReceived(JSON.parse(msg.body));\n    });\n    client.send('/app/chat.addUser', {}, nickname);\n  });\n  return client;\n};\nexport const disconnectWebSocket = client => {\n  if (client) {\n    client.disconnect();\n  }\n};\nconst extractSessionId = url => {\n  return url.replace(`ws://${url}/ws/`, '').replace('/websocket', '').replace(/^[0-9]+\\//g, '');\n};","map":{"version":3,"names":["SockJS","Stomp","initializeWebSocket","url","onMessageReceived","nickname","socket","client","over","connect","ws","_transport","sessionId","replace","subscribe","msg","JSON","parse","body","send","disconnectWebSocket","disconnect","extractSessionId"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/services/WebSocketService.ts"],"sourcesContent":["import SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\n\nexport const initializeWebSocket = (url: string, onMessageReceived: (msg: any) => void, nickname: string) => {\n  const socket = new SockJS(`http://${url}:8080/ws`);\n  const client = Stomp.over(socket);\n\n  client.connect({}, () => {\n    var url = client.ws._transport.url;\n        const sessionId =\n            url.replace(\"ws://${}:8080/ws/\", \"\")\n                .replace(\"/websocket\", \"\")\n                .replace(/^[0-9]+\\//, \"\")\n                .replace(/^[0-9]+\\//, \"\");\n    client.subscribe(`/queue/specific-user-${sessionId}`, (msg) => {\n      onMessageReceived(JSON.parse(msg.body));\n    });\n    client.send('/app/chat.addUser', {}, nickname);\n  });\n\n  return client;\n};\n\nexport const disconnectWebSocket = (client: any) => {\n  if (client) {\n    client.disconnect();\n  }\n};\n\nconst extractSessionId = (url: string): string => {\n  return url.replace(`ws://${url}/ws/`, '')\n            .replace('/websocket', '')\n            .replace(/^[0-9]+\\//g, '');\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,GAAW,EAAEC,iBAAqC,EAAEC,QAAgB,KAAK;EAC3G,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAAC,UAAUG,GAAG,UAAU,CAAC;EAClD,MAAMI,MAAM,GAAGN,KAAK,CAACO,IAAI,CAACF,MAAM,CAAC;EAEjCC,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM;IACvB,IAAIN,GAAG,GAAGI,MAAM,CAACG,EAAE,CAACC,UAAU,CAACR,GAAG;IAC9B,MAAMS,SAAS,GACXT,GAAG,CAACU,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAC/BA,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CACzBA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxBA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACrCN,MAAM,CAACO,SAAS,CAAC,wBAAwBF,SAAS,EAAE,EAAGG,GAAG,IAAK;MAC7DX,iBAAiB,CAACY,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC;IACFX,MAAM,CAACY,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAEd,QAAQ,CAAC;EAChD,CAAC,CAAC;EAEF,OAAOE,MAAM;AACf,CAAC;AAED,OAAO,MAAMa,mBAAmB,GAAIb,MAAW,IAAK;EAClD,IAAIA,MAAM,EAAE;IACVA,MAAM,CAACc,UAAU,CAAC,CAAC;EACrB;AACF,CAAC;AAED,MAAMC,gBAAgB,GAAInB,GAAW,IAAa;EAChD,OAAOA,GAAG,CAACU,OAAO,CAAC,QAAQV,GAAG,MAAM,EAAE,EAAE,CAAC,CAC9BU,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CACzBA,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}