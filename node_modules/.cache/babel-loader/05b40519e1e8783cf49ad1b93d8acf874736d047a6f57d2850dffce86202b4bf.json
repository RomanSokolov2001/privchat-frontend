{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/LeftBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MessengerService } from '../api/MessengerService';\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport { getOpponentNickname } from '../utils/functions';\nimport SearchBar from './animated/searchBar/SearchBar';\nimport ChatBlock from './animated/chatBlock/ChatBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftBar = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const {\n    chats,\n    setCurrentChat,\n    isMobile\n  } = useMessenger();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showedChats, setShowedChats] = useState([]);\n  useEffect(() => {\n    if (chats) {\n      setShowedChats(chats);\n    } else {\n      setShowedChats([]);\n    }\n  }, [chats]);\n  async function handleSendingRequest() {\n    if (!user) return;\n    const response = await MessengerService.sendChatRequest({\n      requestedNickname: searchTerm,\n      requesterPublicKey: user.publicKey\n    }, user.jwt);\n    if (response === 'success') {\n      setSearchTerm('');\n    }\n  }\n  const renderChats = () => {\n    return showedChats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => setCurrentChat(chat),\n      style: {\n        cursor: 'pointer',\n        padding: '5px 0'\n      },\n      children: getOpponentNickname(user, chat)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: `w-[250px] p-2 border-r border-gray-300 flex flex-col items-center bg-white shadow-xl ${isMobile ? 'absolute' : ''} `,\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full overflow-auto\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBlock, {\n        nickname: \"MyFriend2943\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBlock, {\n        nickname: \"SuperPimkpin233\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBlock, {\n        nickname: \"DearBroad233\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftBar, \"ygsAXUZO1Kmg76IOj79J7fYepjU=\", false, function () {\n  return [useUser, useMessenger];\n});\n_c = LeftBar;\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useEffect","useState","MessengerService","useUser","useMessenger","getOpponentNickname","SearchBar","ChatBlock","jsxDEV","_jsxDEV","LeftBar","_s","user","chats","setCurrentChat","isMobile","searchTerm","setSearchTerm","showedChats","setShowedChats","handleSendingRequest","response","sendChatRequest","requestedNickname","requesterPublicKey","publicKey","jwt","renderChats","map","chat","onClick","style","cursor","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","nickname","_c","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/LeftBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MessengerService } from '../api/MessengerService';\nimport { useUser } from '../context/UserContext';\nimport { ChatInterface } from '../types';\nimport { useMessenger } from '../context/MessengerContext';\nimport { getOpponentNickname } from '../utils/functions';\nimport SearchBar from './animated/searchBar/SearchBar';\nimport ChatBlock from './animated/chatBlock/ChatBlock';\n\n\nconst LeftBar: React.FC = () => {\n  const { user } = useUser();\n  const { chats, setCurrentChat, isMobile } = useMessenger();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showedChats, setShowedChats] = useState<ChatInterface[]>([]);\n\n  useEffect(() => {\n    if (chats) {\n      setShowedChats(chats);\n    } else {\n      setShowedChats([]);\n    }\n  }, [chats]);\n\n  async function handleSendingRequest() {\n    if (!user) return;\n    const response = await MessengerService.sendChatRequest(\n      { requestedNickname: searchTerm, requesterPublicKey: user.publicKey },\n      user.jwt\n    );\n    if (response === 'success') {\n      setSearchTerm('');\n    }\n  }\n\n  const renderChats = () => {\n    return (\n      showedChats.map((chat: ChatInterface) => (\n        <li\n          onClick={() => setCurrentChat(chat)}\n          style={{ cursor: 'pointer', padding: '5px 0' }}\n        >\n          {getOpponentNickname(user, chat)}\n        </li>\n      ))\n    );\n  }\n\n  return (\n    <aside className={`w-[250px] p-2 border-r border-gray-300 flex flex-col items-center bg-white shadow-xl ${isMobile ? 'absolute' : ''} `}>\n      <SearchBar />\n      <div className=\"w-full overflow-auto\">\n        <ChatBlock nickname=\"MyFriend2943\" />\n        <ChatBlock nickname=\"SuperPimkpin233\" />\n        <ChatBlock nickname=\"DearBroad233\" />\n\n      </div>\n    </aside>\n  );\n};\n\nexport default LeftBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}