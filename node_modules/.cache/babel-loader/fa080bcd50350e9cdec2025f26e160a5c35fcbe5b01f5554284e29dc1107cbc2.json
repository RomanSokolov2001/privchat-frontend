{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import Header from'../components/Header';import LeftBar,{getOpponentNickname,getOpponentPublicKey}from'../components/LeftBar';import Chat from'../components/Chat';import{useUser}from'../context/UserContext';import{useMessenger}from'../context/MessengerContext';import{MessengerService}from'../api/MessengerService';import{initializeWebSocket,disconnectWebSocket}from'../services/WebSocketService';import DiffieHellmanService from'../api/DiffieHellmanService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Messenger=()=>{const{user}=useUser();const{chats,setChats,messages,setMessages,currentChat,setCurrentChat}=useMessenger();const[refreshTrigger,setRefreshTrigger]=useState(0);const chatsRef=useRef([]);useEffect(()=>{loadChats();},[user,refreshTrigger]);useEffect(()=>{chatsRef.current=chats;},[chats]);const loadChats=async()=>{if(!user)return;const fetchedChats=await MessengerService.getChats(user.publicKey,user.jwt);if(!fetchedChats)return;const updatedChats=fetchedChats.map(chat=>{const otherPartyKey=getOpponentPublicKey(user,chat);const sharedKey=DiffieHellmanService.generateSharedSecret(otherPartyKey,user.secretKey);return{...chat,sharedSecretKey:sharedKey||''};});setChats(updatedChats);};useEffect(()=>{const client=initializeWebSocket('http://16.171.206.255:8080/ws',handleSocketUpdate,(user===null||user===void 0?void 0:user.nickname)||'');return()=>disconnectWebSocket(client);},[user]);const handleSocketUpdate=wsMessage=>{if(wsMessage.message==\"request\"){console.log(\"Updating chats...\");loadChats();return;}const{sender,content:encryptedContent}=wsMessage.message||{};if(!sender||!encryptedContent)return;const chat=chatsRef.current.find(chat=>chat.requesterNickname===sender||chat.requestedNickname===sender);const sharedKey=chat===null||chat===void 0?void 0:chat.sharedSecretKey;if(!sharedKey||!user)return;const decryptedContent=DiffieHellmanService.decrypt(encryptedContent,String(sharedKey));if(!decryptedContent)return;setMessages(prev=>[...prev,{content:decryptedContent,sender,receiver:user.nickname,createdAt:new Date()}]);};const handleChatSelect=chat=>{setCurrentChat({...chat});};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',height:'100vh'},children:[/*#__PURE__*/_jsx(Header,{userNickname:user===null||user===void 0?void 0:user.nickname,chatNickname:currentChat?getOpponentNickname(user,currentChat):'No chat selected'}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flex:1},children:[/*#__PURE__*/_jsx(LeftBar,{onChatSelect:handleChatSelect,trigger:refreshTrigger}),currentChat?/*#__PURE__*/_jsx(Chat,{trigger:refreshTrigger}):/*#__PURE__*/_jsx(\"div\",{children:\"Select a chat to start messaging\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setRefreshTrigger(refreshTrigger+1),children:\"Refresh\"})]});};export default Messenger;","map":{"version":3,"names":["React","useEffect","useRef","useState","Header","LeftBar","getOpponentNickname","getOpponentPublicKey","Chat","useUser","useMessenger","MessengerService","initializeWebSocket","disconnectWebSocket","DiffieHellmanService","jsx","_jsx","jsxs","_jsxs","Messenger","user","chats","setChats","messages","setMessages","currentChat","setCurrentChat","refreshTrigger","setRefreshTrigger","chatsRef","loadChats","current","fetchedChats","getChats","publicKey","jwt","updatedChats","map","chat","otherPartyKey","sharedKey","generateSharedSecret","secretKey","sharedSecretKey","client","handleSocketUpdate","nickname","wsMessage","message","console","log","sender","content","encryptedContent","find","requesterNickname","requestedNickname","decryptedContent","decrypt","String","prev","receiver","createdAt","Date","handleChatSelect","style","display","flexDirection","height","children","userNickname","chatNickname","flex","onChatSelect","trigger","onClick"],"sources":["/home/n/Desktop/temp/app/src/pages/Messenger.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Header from '../components/Header';\nimport LeftBar, { getOpponentNickname, getOpponentPublicKey } from '../components/LeftBar';\nimport Chat from '../components/Chat';\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport { MessengerService } from '../api/MessengerService';\nimport { initializeWebSocket, disconnectWebSocket } from '../services/WebSocketService';\nimport { ChatInterface, Message } from '../types';\nimport DiffieHellmanService from '../api/DiffieHellmanService';\n\n\nconst Messenger: React.FC = () => {\n  const { user } = useUser();\n  const { chats, setChats, messages, setMessages, currentChat, setCurrentChat } = useMessenger();\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const chatsRef = useRef<ChatInterface[]>([]);\n\n  useEffect(() => {\n\n    \n\n    loadChats();\n  }, [user, refreshTrigger]);\n\n  useEffect(() => {\n    chatsRef.current = chats;\n  }, [chats]);\n\n  const loadChats = async () => {\n    if (!user) return;\n    const fetchedChats = await MessengerService.getChats(user.publicKey, user.jwt);\n    if (!fetchedChats) return\n    const updatedChats = fetchedChats.map((chat: ChatInterface) => {\n      const otherPartyKey = getOpponentPublicKey(user, chat);\n      const sharedKey = DiffieHellmanService.generateSharedSecret(otherPartyKey, user.secretKey);\n      return { ...chat, sharedSecretKey: sharedKey || '' };\n    });\n    setChats(updatedChats);\n  };\n\n  useEffect(() => {\n    const client = initializeWebSocket(\n      'http://16.171.206.255:8080/ws',\n      handleSocketUpdate,\n      user?.nickname || ''\n    );\n\n    return () => disconnectWebSocket(client);\n  }, [user]);\n\n  const handleSocketUpdate = (wsMessage: any) => {\n    if (wsMessage.message == \"request\") {\n      console.log(\"Updating chats...\")\n      loadChats();\n      return\n    }\n    const { sender, content: encryptedContent } = wsMessage.message || {};\n    if (!sender || !encryptedContent) return;\n\n    const chat = chatsRef.current.find(\n      (chat) => chat.requesterNickname === sender || chat.requestedNickname === sender\n    );\n\n    const sharedKey = chat?.sharedSecretKey;\n    if (!sharedKey || !user) return;  \n\n    const decryptedContent =  DiffieHellmanService.decrypt(encryptedContent, String(sharedKey));\n    if (!decryptedContent) return;\n\n    setMessages((prev) => [\n      ...prev,\n      {\n        content: decryptedContent,\n        sender,\n        receiver: user.nickname,\n        createdAt: new Date(),\n      },\n    ]);\n  };\n\n  const handleChatSelect = (chat: ChatInterface) => {\n    setCurrentChat({ ...chat });\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      <Header\n        userNickname={user?.nickname}\n        chatNickname={currentChat ? getOpponentNickname(user, currentChat) : 'No chat selected'}\n      />\n      <div style={{ display: 'flex', flex: 1 }}>\n        <LeftBar onChatSelect={handleChatSelect} trigger={refreshTrigger} />\n        {currentChat ? <Chat trigger={refreshTrigger} /> : <div>Select a chat to start messaging</div>}\n      </div>\n      <button onClick={() => setRefreshTrigger(refreshTrigger + 1)}>Refresh</button>\n    </div>\n  );\n};\n\nexport default Messenger;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}