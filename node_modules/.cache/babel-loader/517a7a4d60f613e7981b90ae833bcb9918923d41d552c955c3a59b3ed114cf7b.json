{"ast":null,"code":"var _jsxFileName = \"/Users/ndev/Desktop/privchat-frontend/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AuthService } from \"../api/AuthService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../context/UserContext\";\nimport DiffieHellmanService from \"../api/DiffieHellmanService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [infoIconRef, setInfoIconRef] = useState();\n  const {\n    setUser,\n    user\n  } = useUser();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const credentials = await AuthService.enterPool();\n      const {\n        publicKey,\n        secret\n      } = DiffieHellmanService.handleGenerateKeys();\n      setUser({\n        jwt: credentials.token,\n        nickname: credentials.nickname,\n        publicKey,\n        secretKey: String(secret)\n      });\n      navigate(\"/messenger\");\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Login failed. No response from server.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: /*#__PURE__*/_jsxDEV(LoginWindow, {\n      handleLogin: handleLogin,\n      setState: setShowInfoModal,\n      state: showInfoModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OTUN5VBhkoFa0Bqhw4bpOewLZ38=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","AuthService","useNavigate","useUser","DiffieHellmanService","jsxDEV","_jsxDEV","Login","_s","navigate","showInfoModal","setShowInfoModal","infoIconRef","setInfoIconRef","setUser","user","handleLogin","e","preventDefault","credentials","enterPool","publicKey","secret","handleGenerateKeys","jwt","token","nickname","secretKey","String","error","console","alert","Body","children","LoginWindow","setState","state","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ndev/Desktop/privchat-frontend/src/pages/Login.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\nimport { AuthService } from \"../api/AuthService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../context/UserContext\";\nimport DiffieHellmanService from \"../api/DiffieHellmanService\";\nimport Button from \"../components/Button\";\nimport { iconsRef } from \"../utils/iconsRef\";\nimport { useMessenger } from \"../context/MessengerContext\";\n\nconst Login: React.FC = () => {\n  const navigate = useNavigate();\n  const [showInfoModal, setShowInfoModal] = useState(false)\n  const [infoIconRef, setInfoIconRef] = useState()\n  const { setUser, user } = useUser()\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const credentials = await AuthService.enterPool();\n\n      const { publicKey, secret } = DiffieHellmanService.handleGenerateKeys()\n      setUser({ jwt: credentials.token, nickname: credentials.nickname, publicKey, secretKey: String(secret) });\n\n\n      navigate(\"/messenger\");\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Login failed. No response from server.\");\n    }\n  };\n\n  return (\n    <Body>\n      <LoginWindow handleLogin={handleLogin} setState={setShowInfoModal} state={showInfoModal}/>\n\n    </Body>\n  );\n};\n\nexport default Login;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAiDC,QAAQ,QAAQ,OAAO;AACpF,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,oBAAoB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK/D,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAChD,MAAM;IAAEc,OAAO;IAAEC;EAAK,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAEnC,MAAMa,WAAW,GAAG,MAAOC,CAAkB,IAAK;IAChDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,WAAW,GAAG,MAAMlB,WAAW,CAACmB,SAAS,CAAC,CAAC;MAEjD,MAAM;QAAEC,SAAS;QAAEC;MAAO,CAAC,GAAGlB,oBAAoB,CAACmB,kBAAkB,CAAC,CAAC;MACvET,OAAO,CAAC;QAAEU,GAAG,EAAEL,WAAW,CAACM,KAAK;QAAEC,QAAQ,EAAEP,WAAW,CAACO,QAAQ;QAAEL,SAAS;QAAEM,SAAS,EAAEC,MAAM,CAACN,MAAM;MAAE,CAAC,CAAC;MAGzGb,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCE,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACEzB,OAAA,CAAC0B,IAAI;IAAAC,QAAA,eACH3B,OAAA,CAAC4B,WAAW;MAAClB,WAAW,EAAEA,WAAY;MAACmB,QAAQ,EAAExB,gBAAiB;MAACyB,KAAK,EAAE1B;IAAc;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtF,CAAC;AAEX,CAAC;AAAChC,EAAA,CA5BID,KAAe;EAAA,QACFL,WAAW,EAGFC,OAAO;AAAA;AAAAsC,EAAA,GAJ7BlC,KAAe;AA8BrB,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}