{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/LeftBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { animated, useSpring } from '@react-spring/web';\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport { getOpponentNickname } from '../utils/functions';\nimport SearchBar from './animated/searchBar/SearchBar';\nimport ChatBlock from './animated/chatBlock/ChatBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftBar = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const {\n    chats,\n    setCurrentChat,\n    isMobile,\n    screenSize,\n    showSidebar\n  } = useMessenger();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showedChats, setShowedChats] = useState([]);\n  const [springs, api] = useSpring(() => ({\n    x: -250,\n    config: {\n      tension: 300,\n      friction: 30\n    }\n  }));\n\n  // Update chats display when chats change\n  useEffect(() => {\n    setShowedChats(chats || []);\n  }, [chats]);\n\n  // Handle sidebar animation based on screen size\n  useEffect(() => {\n    if (isMobile) {\n      api.start({\n        x: showSidebar ? 0 : -250\n      });\n    } else {\n      api.set({\n        x: 0\n      }); // Reset to default on larger screens\n    }\n  }, [isMobile, showSidebar, api]);\n\n  // Render list of chats\n  const renderChats = () => {\n    return showedChats.map(chat => /*#__PURE__*/_jsxDEV(ChatBlock, {\n      nickname: getOpponentNickname(user, chat),\n      onClick: () => setCurrentChat(chat)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${isMobile && showSidebar ? 'absolute w-full bg-[rgba(0,0,0,0.5)]' : ''}`,\n    style: {\n      zIndex: 999,\n      height: `${screenSize.height - 80}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      className: `w-[250px] p-2 border-r border-gray-300 flex flex-col items-center bg-white shadow-xl ${isMobile ? 'absolute h-full' : 'h-full left-[10px]'}`,\n      style: {\n        maxHeight: `${screenSize.height - 80}px`,\n        height: `${screenSize.height - 80}px`,\n        ...springs\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full overflow-auto\",\n        children: showedChats.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderChats()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-500\",\n          children: \"No chats available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full overflow-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftBar, \"YXnDdZtwSwF4w85xCV1f0UIzXlw=\", false, function () {\n  return [useUser, useMessenger, useSpring];\n});\n_c = LeftBar;\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useEffect","useState","animated","useSpring","useUser","useMessenger","getOpponentNickname","SearchBar","ChatBlock","jsxDEV","_jsxDEV","LeftBar","_s","user","chats","setCurrentChat","isMobile","screenSize","showSidebar","searchTerm","setSearchTerm","showedChats","setShowedChats","springs","api","x","config","tension","friction","start","set","renderChats","map","chat","nickname","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","style","zIndex","height","children","div","maxHeight","length","_c","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/LeftBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { animated, useSpring } from '@react-spring/web';\nimport { MessengerService } from '../api/MessengerService';\nimport { useUser } from '../context/UserContext';\nimport { ChatInterface } from '../types';\nimport { useMessenger } from '../context/MessengerContext';\nimport { getOpponentNickname } from '../utils/functions';\nimport SearchBar from './animated/searchBar/SearchBar';\nimport ChatBlock from './animated/chatBlock/ChatBlock';\n\nconst LeftBar: React.FC = () => {\n  const { user } = useUser();\n  const { chats, setCurrentChat, isMobile, screenSize, showSidebar } = useMessenger();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showedChats, setShowedChats] = useState<ChatInterface[]>([]);\n\n  const [springs, api] = useSpring(() => ({\n    x: -250,\n    config: { tension: 300, friction: 30 },\n  }));\n\n  // Update chats display when chats change\n  useEffect(() => {\n    setShowedChats(chats || []);\n  }, [chats]);\n\n  // Handle sidebar animation based on screen size\n  useEffect(() => {\n    if (isMobile) {\n      api.start({ x: showSidebar ? 0 : -250 });\n    } else {\n      api.set({ x: 0 }); // Reset to default on larger screens\n    }\n  }, [isMobile, showSidebar, api]);\n\n\n  // Render list of chats\n  const renderChats = () => {\n    return showedChats.map((chat: ChatInterface) => (\n        <ChatBlock nickname={getOpponentNickname(user, chat)} onClick={() => setCurrentChat(chat)} />\n    ));\n  };\n\n  return (\n    <div\n      className={`${isMobile && showSidebar ? 'absolute w-full bg-[rgba(0,0,0,0.5)]' : ''}`}\n      style={{ zIndex: 999, height: `${screenSize.height - 80}px`,}}\n    >\n      <animated.div\n        className={`w-[250px] p-2 border-r border-gray-300 flex flex-col items-center bg-white shadow-xl ${\n          isMobile ? 'absolute h-full' : 'h-full left-[10px]'\n        }`}\n        style={{\n          maxHeight: `${screenSize.height - 80}px`,\n          height: `${screenSize.height - 80}px`,\n          ...springs,\n        }}\n      >\n        {/* Search Bar */}\n        <SearchBar />\n\n        {/* Chat List */}\n        <div className=\"w-full overflow-auto\">\n          {showedChats.length > 0 ? (\n            <ul>{renderChats()}</ul>\n          ) : (\n            <p className=\"text-center text-gray-500\">No chats available</p>\n          )}\n        </div>\n\n        {/* Chat Blocks for Demo */}\n        <div className=\"w-full overflow-auto\">\n    \n        </div>\n      </animated.div>\n    </div>\n  );\n};\n\nexport default LeftBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}