{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/pages/Messenger.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { MessengerService } from '../api/MessengerService';\nimport DiffieHellmanService from '../api/DiffieHellmanService';\nimport { initializeWebSocket, disconnectWebSocket } from '../services/WebSocketService';\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport { BACKEND_API } from '../config';\nimport Header from '../components/Header';\nimport { getOpponentNickname, getOpponentPublicKey } from '../utils/functions';\nimport { templateMsgs } from '../components/Chat';\nimport LeftBar from '../components/LeftBar';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messenger = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const {\n    chats,\n    setChats,\n    messages,\n    setMessages,\n    currentChat,\n    setCurrentChat,\n    isMobile,\n    showSidebar,\n    screenSize\n  } = useMessenger();\n  const chatsRef = useRef([]);\n  useEffect(() => {\n    console.log(screenSize);\n  }, [screenSize]);\n  useEffect(() => {\n    chatsRef.current = chats;\n  }, [chats]);\n  useEffect(() => {\n    const client = initializeWebSocket(BACKEND_API, handleSocketUpdate, (user === null || user === void 0 ? void 0 : user.nickname) || '');\n    return () => disconnectWebSocket(client);\n  }, [user]);\n  const loadChats = async () => {\n    if (!user) return;\n    const fetchedChats = await MessengerService.getChats(user.publicKey, user.jwt);\n    if (!fetchedChats) return;\n    const updatedChats = fetchedChats.map(chat => {\n      const otherPartyKey = getOpponentPublicKey(user, chat);\n      const sharedKey = DiffieHellmanService.generateSharedSecret(otherPartyKey, user.secretKey);\n      return {\n        ...chat,\n        sharedSecretKey: sharedKey || ''\n      };\n    });\n    setChats(updatedChats);\n  };\n  const handleSocketUpdate = wsMessage => {\n    if (wsMessage.message == \"request\") {\n      loadChats();\n      return;\n    }\n    const {\n      sender,\n      content: encryptedContent\n    } = wsMessage.message || {};\n    if (!sender || !encryptedContent) return;\n    const chat = chatsRef.current.find(chat => chat.requesterNickname === sender || chat.requestedNickname === sender);\n    const sharedKey = chat === null || chat === void 0 ? void 0 : chat.sharedSecretKey;\n    if (!sharedKey || !user) return;\n    const decryptedContent = DiffieHellmanService.decrypt(encryptedContent, String(sharedKey));\n    if (!decryptedContent) return;\n    setMessages(prev => [...prev, {\n      content: decryptedContent,\n      sender,\n      receiver: user.nickname,\n      time: String(new Date())\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen w-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userNickname: user === null || user === void 0 ? void 0 : user.nickname,\n      chatNickname: currentChat ? getOpponentNickname(user, currentChat) : 'No chat selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row bg-[#ebebeb] w-full h-full\",\n      children: [(!isMobile || showSidebar) && /*#__PURE__*/_jsxDEV(LeftBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `max-h-[${String(300)}px] h-[${String(300)}px] overflow-y-auto border-2 p-0 m-0`,\n        children: templateMsgs.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          time: message.time,\n          text: message.content,\n          isOnLeft: 'Bob' === message.sender\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Messenger, \"IyoGjByliFAx5hD7oYaXdL9ItoY=\", false, function () {\n  return [useUser, useMessenger];\n});\n_c = Messenger;\nexport default Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["React","useEffect","useRef","MessengerService","DiffieHellmanService","initializeWebSocket","disconnectWebSocket","useUser","useMessenger","BACKEND_API","Header","getOpponentNickname","getOpponentPublicKey","templateMsgs","LeftBar","Message","jsxDEV","_jsxDEV","Messenger","_s","user","chats","setChats","messages","setMessages","currentChat","setCurrentChat","isMobile","showSidebar","screenSize","chatsRef","console","log","current","client","handleSocketUpdate","nickname","loadChats","fetchedChats","getChats","publicKey","jwt","updatedChats","map","chat","otherPartyKey","sharedKey","generateSharedSecret","secretKey","sharedSecretKey","wsMessage","message","sender","content","encryptedContent","find","requesterNickname","requestedNickname","decryptedContent","decrypt","String","prev","receiver","time","Date","className","children","userNickname","chatNickname","fileName","_jsxFileName","lineNumber","columnNumber","index","text","isOnLeft","_c","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/pages/Messenger.tsx"],"sourcesContent":["import React, { Key, useEffect, useRef, useState } from 'react';\nimport { MessengerService } from '../api/MessengerService';\nimport DiffieHellmanService from '../api/DiffieHellmanService';\nimport { initializeWebSocket, disconnectWebSocket } from '../services/WebSocketService';\n\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport { ChatInterface, MessageInterface } from '../types';\nimport { BACKEND_API } from '../config';\n\nimport Header from '../components/Header';\nimport { getOpponentNickname, getOpponentPublicKey } from '../utils/functions';\nimport Body from '../components/Body';\nimport { templateMsgs } from '../components/Chat';\nimport LeftBar from '../components/LeftBar';\nimport Message from '../components/Message';\n\n\nconst Messenger: React.FC = () => {\n  const { user } = useUser();\n  const { chats, setChats, messages, setMessages, currentChat, setCurrentChat, isMobile, showSidebar, screenSize } = useMessenger();\n  const chatsRef = useRef<ChatInterface[]>([]);\n\n\n  useEffect(()=> {\n    console.log(screenSize)\n  }, [screenSize])\n\n  useEffect(() => {\n    chatsRef.current = chats;\n  }, [chats]);\n\n  useEffect(() => {\n    const client = initializeWebSocket(\n      BACKEND_API,\n      handleSocketUpdate,\n      user?.nickname || ''\n    );\n\n    return () => disconnectWebSocket(client);\n  }, [user]);\n\n  const loadChats = async () => {\n    if (!user) return;\n    const fetchedChats = await MessengerService.getChats(user.publicKey, user.jwt);\n    if (!fetchedChats) return\n    const updatedChats = fetchedChats.map((chat: ChatInterface) => {\n      const otherPartyKey = getOpponentPublicKey(user, chat);\n      const sharedKey = DiffieHellmanService.generateSharedSecret(otherPartyKey, user.secretKey);\n      return { ...chat, sharedSecretKey: sharedKey || '' };\n    });\n    setChats(updatedChats);\n  };\n\n  const handleSocketUpdate = (wsMessage: any) => {\n    if (wsMessage.message == \"request\") {\n      loadChats();\n      return\n    }\n    const { sender, content: encryptedContent } = wsMessage.message || {};\n    if (!sender || !encryptedContent) return;\n\n    const chat = chatsRef.current.find(\n      (chat) => chat.requesterNickname === sender || chat.requestedNickname === sender\n    );\n\n    const sharedKey = chat?.sharedSecretKey;\n    if (!sharedKey || !user) return;  \n\n    const decryptedContent =  DiffieHellmanService.decrypt(encryptedContent, String(sharedKey));\n    if (!decryptedContent) return;\n\n    setMessages((prev) => [\n      ...prev,\n      {\n        content: decryptedContent,\n        sender,\n        receiver: user.nickname,\n        time: String(new Date()),\n      },\n    ]);\n  };\n\n  \n\n  return (\n    <div className=\"flex flex-col h-screen w-screen\">\n        <Header\n        userNickname={user?.nickname}\n        chatNickname={currentChat ? getOpponentNickname(user, currentChat) : 'No chat selected'}\n        />\n      \n      <div className=\"flex flex-row bg-[#ebebeb] w-full h-full\">\n        \n        {(!isMobile || showSidebar) && <LeftBar />}\n  \n        <ul className={`max-h-[${String(300)}px] h-[${String(300)}px] overflow-y-auto border-2 p-0 m-0`}>\n          {templateMsgs.map((message: MessageInterface, index: Key) => (\n            <Message\n              key={index}\n              time={message.time}\n              text={message.content}\n              isOnLeft={'Bob' === message.sender}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n  \n};\n\nexport default Messenger;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}