{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/Chat.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { useUser } from '../context/UserContext';\nimport { MessengerService } from '../api/MessengerService';\nimport { useMessenger } from '../context/MessengerContext';\nimport { getOpponentNickname } from '../utils/functions';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const listRef = useRef(null);\n  const {\n    user\n  } = useUser();\n  const {\n    messages,\n    setMessages,\n    currentChat,\n    screenSize\n  } = useMessenger();\n  const [chatMessages, setChatMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [opponentNickname, setOpponentNickname] = useState('');\n  useEffect(() => {\n    if (!currentChat) return;\n    function loadMessages() {\n      if (!currentChat) return;\n      const filteredMessages = messages.filter(msg => msg.sender == getOpponentNickname(user, currentChat) || msg.receiver == getOpponentNickname(user, currentChat));\n      setChatMessages(filteredMessages);\n    }\n    loadMessages();\n  }, [currentChat, messages]);\n  const sendMessage = async () => {\n    if (!user || !currentChat) return;\n    if (message.trim()) {\n      setMessage('');\n      await MessengerService.sendMessage(getOpponentNickname(user, currentChat), message, String(currentChat.sharedSecretKey), user.jwt);\n    }\n    const messageToSave = {\n      sender: user.nickname,\n      receiver: getOpponentNickname(user, currentChat),\n      time: String(new Date()),\n      content: message\n    };\n    setMessages(prev => [...prev, messageToSave]);\n  };\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    ref: listRef,\n    className: \"max-h-full overflow-auto\",\n    style: {\n      maxHeight: `${screenSize.height - 80}px`,\n      height: `${screenSize.height - 80}px`\n    },\n    children: templateMsgs.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n      time: message.time,\n      text: message.content,\n      isOnLeft: 'Bob' === message.sender,\n      isLast: index === templateMsgs.length - 1\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"BYGIMLzxJ/f02iT6EhpIOOYVomQ=\", false, function () {\n  return [useUser, useMessenger];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useRef","useState","useUser","MessengerService","useMessenger","getOpponentNickname","Message","jsxDEV","_jsxDEV","Chat","_s","listRef","user","messages","setMessages","currentChat","screenSize","chatMessages","setChatMessages","message","setMessage","opponentNickname","setOpponentNickname","loadMessages","filteredMessages","filter","msg","sender","receiver","sendMessage","trim","String","sharedSecretKey","jwt","messageToSave","nickname","time","Date","content","prev","current","scrollTop","scrollHeight","ref","className","style","maxHeight","height","children","templateMsgs","map","index","text","isOnLeft","isLast","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/components/Chat.tsx"],"sourcesContent":["import { Key, useEffect, useRef, useState } from 'react';\nimport { useUser } from '../context/UserContext';\nimport { MessengerService } from '../api/MessengerService';\nimport { useMessenger } from '../context/MessengerContext';\nimport { getOpponentNickname } from '../utils/functions';\nimport Message from './Message';\nimport { MessageInterface } from '../types';\nimport MessageInput from './MessageInput';\n\n\nconst Chat = () => {\n  const listRef = useRef<HTMLUListElement | null>(null);\n  const { user } = useUser()\n  const { messages, setMessages, currentChat, screenSize } = useMessenger()\n  const [chatMessages, setChatMessages] = useState<any>([])\n  const [message, setMessage] = useState('');\n  const [opponentNickname, setOpponentNickname] = useState<string>('')\n\n\n\n  useEffect(() => {\n    if (!currentChat) return\n    function loadMessages() {\n      if (!currentChat) return\n      const filteredMessages = messages.filter(msg =>\n        msg.sender == getOpponentNickname(user, currentChat) ||\n        msg.receiver == getOpponentNickname(user, currentChat)\n      );\n\n      setChatMessages(filteredMessages);\n    }\n\n    loadMessages()\n  }, [currentChat, messages])\n\n  const sendMessage = async () => {\n    if (!user || !currentChat) return\n    if (message.trim()) {\n      setMessage('');\n      await MessengerService.sendMessage(getOpponentNickname(user, currentChat), message, String(currentChat.sharedSecretKey), user.jwt)\n    }\n    const messageToSave: MessageInterface =\n    {\n      sender: user.nickname,\n      receiver: getOpponentNickname(user, currentChat),\n      time: String(new Date()),\n      content: message\n    }\n    setMessages((prev) => [...prev, messageToSave])\n\n  };\n\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  return (\n    <ul ref={listRef} className=\"max-h-full overflow-auto\" style={{\n      maxHeight: `${screenSize.height - 80}px`,\n      height: `${screenSize.height - 80}px`,\n    }}>\n      {templateMsgs.map((message: MessageInterface, index: Key) => (\n        <Message\n          key={index}\n          time={message.time}\n          text={message.content}\n          isOnLeft={'Bob' === message.sender}\n          isLast={index === templateMsgs.length - 1}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}