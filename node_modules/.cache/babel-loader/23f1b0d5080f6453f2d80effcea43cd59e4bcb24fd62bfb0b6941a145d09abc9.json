{"ast":null,"code":"var _jsxFileName = \"/Users/ndev/Desktop/privchat-frontend/src/context/MessengerContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessengerContext = /*#__PURE__*/createContext(undefined);\nexport const MessengerProvider = ({\n  children\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  return /*#__PURE__*/_jsxDEV(MessengerContext.Provider, {\n    value: {\n      messages,\n      setMessages,\n      chats,\n      setChats,\n      currentChat,\n      setCurrentChat\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MessengerProvider, \"vkhMv1Ra54qg0a/DC6RAZRWm530=\");\n_c = MessengerProvider;\nexport const useMessenger = () => {\n  _s2();\n  const context = useContext(MessengerContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useMessenger, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"MessengerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","MessengerContext","undefined","MessengerProvider","children","_s","messages","setMessages","chats","setChats","currentChat","setCurrentChat","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useMessenger","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ndev/Desktop/privchat-frontend/src/context/MessengerContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { ChatInterface, Message } from '../types';\n\n\ninterface MessengerContextType {\n  messages: Message[];\n  setMessages: React.Dispatch<React.SetStateAction<Message[]>>;  \n  chats: ChatInterface[];\n  setChats: React.Dispatch<React.SetStateAction<ChatInterface[]>>;\n  currentChat: ChatInterface | null;\n  setCurrentChat: React.Dispatch<React.SetStateAction<ChatInterface | null>>;\n  infoIconRef: any;\n  setInfoIconRef: React.Dispatch<React.SetStateAction<ChatInterface | null>>;\n}\n\nconst MessengerContext = createContext<MessengerContextType | undefined>(undefined);\n\ninterface MessengerProviderProps {\n  children: ReactNode;\n}\n\nexport const MessengerProvider: React.FC<MessengerProviderProps> = ({ children }) => {\n    const [messages, setMessages] = useState<Message[]>([])\n    const [chats, setChats] = useState<ChatInterface[]>([])\n    const [currentChat, setCurrentChat] = useState<ChatInterface | null>(null);\n\n  return (\n    <MessengerContext.Provider value={{ messages, setMessages, chats, setChats, currentChat, setCurrentChat}}>\n      {children}\n    </MessengerContext.Provider >\n  );\n};\n\nexport const useMessenger = (): MessengerContextType => {\n  const context = useContext(MessengerContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe9E,MAAMC,gBAAgB,gBAAGL,aAAa,CAAmCM,SAAS,CAAC;AAMnF,OAAO,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAkB,EAAE,CAAC;EACvD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAuB,IAAI,CAAC;EAE5E,oBACEE,OAAA,CAACC,gBAAgB,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEP,QAAQ;MAAEC,WAAW;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,WAAW;MAAEC;IAAc,CAAE;IAAAP,QAAA,EACtGA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACZ,EAAA,CAVWF,iBAAmD;AAAAe,EAAA,GAAnDf,iBAAmD;AAYhE,OAAO,MAAMgB,YAAY,GAAGA,CAAA,KAA4B;EAAAC,GAAA;EACtD,MAAMC,OAAO,GAAGxB,UAAU,CAACI,gBAAgB,CAAC;EAC5C,IAAI,CAACoB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,YAAY;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}