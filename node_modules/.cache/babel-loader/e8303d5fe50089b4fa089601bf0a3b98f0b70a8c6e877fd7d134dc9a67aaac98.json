{"ast":null,"code":"var _jsxFileName = \"/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/pages/Messenger.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Header from '../components/Header';\nimport LeftBar, { getOpponentNickname, getOpponentPublicKey } from '../components/LeftBar';\nimport Chat from '../components/Chat';\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\nimport DiffieHellmanService from '../api/DiffieHellmanService';\nimport { BACKEND_API } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messenger = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const {\n    chats,\n    setChats,\n    messages,\n    setMessages,\n    currentChat,\n    setCurrentChat\n  } = useMessenger();\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const chatsRef = useRef([]);\n  useEffect(() => {\n    loadChats();\n  }, [user, refreshTrigger]);\n  useEffect(() => {\n    chatsRef.current = chats;\n  }, [chats]);\n  const loadChats = async () => {\n    if (!user) return;\n    const fetchedChats = await MessengerService.getChats(user.publicKey, user.jwt);\n    if (!fetchedChats) return;\n    const updatedChats = fetchedChats.map(chat => {\n      const otherPartyKey = getOpponentPublicKey(user, chat);\n      const sharedKey = DiffieHellmanService.generateSharedSecret(otherPartyKey, user.secretKey);\n      return {\n        ...chat,\n        sharedSecretKey: sharedKey || ''\n      };\n    });\n    setChats(updatedChats);\n  };\n  useEffect(() => {\n    const client = initializeWebSocket(BACKEND_API, handleSocketUpdate, (user === null || user === void 0 ? void 0 : user.nickname) || '');\n    return () => disconnectWebSocket(client);\n  }, [user]);\n  const handleSocketUpdate = wsMessage => {\n    if (wsMessage.message == \"request\") {\n      console.log(\"Updating chats...\");\n      loadChats();\n      return;\n    }\n    const {\n      sender,\n      content: encryptedContent\n    } = wsMessage.message || {};\n    if (!sender || !encryptedContent) return;\n    const chat = chatsRef.current.find(chat => chat.requesterNickname === sender || chat.requestedNickname === sender);\n    const sharedKey = chat === null || chat === void 0 ? void 0 : chat.sharedSecretKey;\n    if (!sharedKey || !user) return;\n    const decryptedContent = DiffieHellmanService.decrypt(encryptedContent, String(sharedKey));\n    if (!decryptedContent) return;\n    setMessages(prev => [...prev, {\n      content: decryptedContent,\n      sender,\n      receiver: user.nickname,\n      createdAt: new Date()\n    }]);\n  };\n  const handleChatSelect = chat => {\n    setCurrentChat({\n      ...chat\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userNickname: user === null || user === void 0 ? void 0 : user.nickname,\n      chatNickname: currentChat ? getOpponentNickname(user, currentChat) : 'No chat selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(LeftBar, {\n        onChatSelect: handleChatSelect,\n        trigger: refreshTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), currentChat ? /*#__PURE__*/_jsxDEV(Chat, {\n        trigger: refreshTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a chat to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setRefreshTrigger(refreshTrigger + 1),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Messenger, \"fj8XMBC/8O78bHrLzw9Kg4GPn5Q=\", false, function () {\n  return [useUser, useMessenger];\n});\n_c = Messenger;\nexport default Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Header","LeftBar","getOpponentNickname","getOpponentPublicKey","Chat","useUser","useMessenger","DiffieHellmanService","BACKEND_API","jsxDEV","_jsxDEV","Messenger","_s","user","chats","setChats","messages","setMessages","currentChat","setCurrentChat","refreshTrigger","setRefreshTrigger","chatsRef","loadChats","current","fetchedChats","MessengerService","getChats","publicKey","jwt","updatedChats","map","chat","otherPartyKey","sharedKey","generateSharedSecret","secretKey","sharedSecretKey","client","initializeWebSocket","handleSocketUpdate","nickname","disconnectWebSocket","wsMessage","message","console","log","sender","content","encryptedContent","find","requesterNickname","requestedNickname","decryptedContent","decrypt","String","prev","receiver","createdAt","Date","handleChatSelect","style","display","flexDirection","height","children","userNickname","chatNickname","fileName","_jsxFileName","lineNumber","columnNumber","flex","onChatSelect","trigger","onClick","_c","$RefreshReg$"],"sources":["/home/n/Desktop/privchat10.11.2024/privchatFrontend/src/pages/Messenger.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Header from '../components/Header';\nimport LeftBar, { getOpponentNickname, getOpponentPublicKey } from '../components/LeftBar';\nimport Chat from '../components/Chat';\nimport { useUser } from '../context/UserContext';\nimport { useMessenger } from '../context/MessengerContext';\n\nimport { ChatInterface } from '../types';\nimport DiffieHellmanService from '../api/DiffieHellmanService';\nimport { BACKEND_API } from '../config';\n\n\nconst Messenger: React.FC = () => {\n  const { user } = useUser();\n  const { chats, setChats, messages, setMessages, currentChat, setCurrentChat } = useMessenger();\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const chatsRef = useRef<ChatInterface[]>([]);\n\n\n  useEffect(() => {\n    loadChats();\n  }, [user, refreshTrigger]);\n\n  useEffect(() => {\n    chatsRef.current = chats;\n  }, [chats]);\n\n  const loadChats = async () => {\n    if (!user) return;\n    const fetchedChats = await MessengerService.getChats(user.publicKey, user.jwt);\n    if (!fetchedChats) return\n    const updatedChats = fetchedChats.map((chat: ChatInterface) => {\n      const otherPartyKey = getOpponentPublicKey(user, chat);\n      const sharedKey = DiffieHellmanService.generateSharedSecret(otherPartyKey, user.secretKey);\n      return { ...chat, sharedSecretKey: sharedKey || '' };\n    });\n    setChats(updatedChats);\n  };\n\n  useEffect(() => {\n    const client = initializeWebSocket(\n      BACKEND_API,\n      handleSocketUpdate,\n      user?.nickname || ''\n    );\n\n    return () => disconnectWebSocket(client);\n  }, [user]);\n\n  const handleSocketUpdate = (wsMessage: any) => {\n    if (wsMessage.message == \"request\") {\n      console.log(\"Updating chats...\")\n      loadChats();\n      return\n    }\n    const { sender, content: encryptedContent } = wsMessage.message || {};\n    if (!sender || !encryptedContent) return;\n\n    const chat = chatsRef.current.find(\n      (chat) => chat.requesterNickname === sender || chat.requestedNickname === sender\n    );\n\n    const sharedKey = chat?.sharedSecretKey;\n    if (!sharedKey || !user) return;  \n\n    const decryptedContent =  DiffieHellmanService.decrypt(encryptedContent, String(sharedKey));\n    if (!decryptedContent) return;\n\n    setMessages((prev) => [\n      ...prev,\n      {\n        content: decryptedContent,\n        sender,\n        receiver: user.nickname,\n        createdAt: new Date(),\n      },\n    ]);\n  };\n\n  const handleChatSelect = (chat: ChatInterface) => {\n    setCurrentChat({ ...chat });\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      <Header\n        userNickname={user?.nickname}\n        chatNickname={currentChat ? getOpponentNickname(user, currentChat) : 'No chat selected'}\n      />\n      <div style={{ display: 'flex', flex: 1 }}>\n        <LeftBar onChatSelect={handleChatSelect} trigger={refreshTrigger} />\n        {currentChat ? <Chat trigger={refreshTrigger} /> : <div>Select a chat to start messaging</div>}\n      </div>\n      <button onClick={() => setRefreshTrigger(refreshTrigger + 1)}>Refresh</button>\n    </div>\n  );\n};\n\nexport default Messenger;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}